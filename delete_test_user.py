#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
"""

import sqlite3
import config

def get_db_connection():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    return sqlite3.connect(config.DB_NAME)

def show_test_user_bookings():
    """–ü–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    # –ü–æ–∏—Å–∫ –∑–∞–ø–∏—Å–µ–π –ø–æ username (–±–µ–∑ @)
    cursor.execute("""
        SELECT id, user_id, username, first_name, chosen_course, confirmed, created_at
        FROM bookings
        WHERE username = 'r1iiis'
        ORDER BY created_at DESC
    """)
    
    bookings = cursor.fetchall()
    conn.close()
    
    if not bookings:
        print("‚ùå –ó–∞–ø–∏—Å–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @r1iiis –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
        return []
    
    print(f"üìã –ù–∞–π–¥–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @r1iiis: {len(bookings)}\n")
    for booking in bookings:
        id, user_id, username, first_name, chosen_course, confirmed, created_at = booking
        status = {0: "–û–∂–∏–¥–∞–µ—Ç –æ–ø–ª–∞—Ç—ã", 1: "–ó–∞–≥—Ä—É–∂–µ–Ω —á–µ–∫", 2: "–ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ", -1: "–û—Ç–º–µ–Ω–µ–Ω–æ"}.get(confirmed, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
        print(f"ID –∑–∞–ø–∏—Å–∏: {id}")
        print(f"  User ID: {user_id}")
        print(f"  –ò–º—è: {first_name}")
        print(f"  –ö—É—Ä—Å: {chosen_course}")
        print(f"  –°—Ç–∞—Ç—É—Å: {status}")
        print(f"  –î–∞—Ç–∞: {created_at}")
        print("-" * 40)
    
    return bookings

def delete_test_user_bookings():
    """–£–¥–∞–ª–∏—Ç—å –≤—Å–µ –∑–∞–ø–∏—Å–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    try:
        # –£–¥–∞–ª–µ–Ω–∏–µ –∑–∞–ø–∏—Å–µ–π
        cursor.execute("""
            DELETE FROM bookings
            WHERE username = 'r1iiis'
        """)
        
        deleted_count = cursor.rowcount
        conn.commit()
        
        print(f"\n‚úÖ –£—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–æ –∑–∞–ø–∏—Å–µ–π: {deleted_count}")
        
    except Exception as e:
        conn.rollback()
        print(f"\n‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —É–¥–∞–ª–µ–Ω–∏–∏: {e}")
        return False
    finally:
        conn.close()
    
    return True

def main():
    print("üóëÔ∏è  –£–¥–∞–ª–µ–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –∑–∞–ø–∏—Å–µ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è @r1iiis\n")
    print("=" * 60)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∑–∞–ø–∏—Å–∏ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
    bookings = show_test_user_bookings()
    
    if not bookings:
        return
    
    # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
    print(f"\n‚ö†Ô∏è  –ë—É–¥–µ—Ç —É–¥–∞–ª–µ–Ω–æ {len(bookings)} –∑–∞–ø–∏—Å–µ–π!")
    confirmation = input("–í—ã —É–≤–µ—Ä–µ–Ω—ã? (–¥–∞/yes –¥–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è): ").lower()
    
    if confirmation in ['–¥–∞', 'yes', 'y', '–¥']:
        if delete_test_user_bookings():
            print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –∑–∞–ø–∏—Å–∏ —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω—ã!")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –∑–∞–ø–∏—Å–∏ –¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω–æ —É–¥–∞–ª–µ–Ω—ã
            print("\nüìã –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è:")
            show_test_user_bookings()
    else:
        print("\n‚ùå –£–¥–∞–ª–µ–Ω–∏–µ –æ—Ç–º–µ–Ω–µ–Ω–æ")

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n\n‚èπ –û–ø–µ—Ä–∞—Ü–∏—è –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")