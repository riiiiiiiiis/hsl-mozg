#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π.
–í—ã–≤–æ–¥–∏—Ç –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å –±–µ–∑ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π.
"""

import sqlite3
from datetime import datetime
import config

def get_db_connection():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    return sqlite3.connect(config.DB_NAME)

def get_confirmed_participants():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (confirmed = 2)"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    # –ó–∞–ø—Ä–æ—Å –≤—Å–µ—Ö –∑–∞–ø–∏—Å–µ–π —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π
    cursor.execute("""
        SELECT user_id, username, first_name, chosen_course, course_id, created_at
        FROM bookings
        WHERE confirmed = 2
        ORDER BY created_at DESC
    """)
    
    participants = cursor.fetchall()
    conn.close()
    
    return participants

def display_participants():
    """–í—ã–≤–µ—Å—Ç–∏ —Å–ø–∏—Å–æ–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –≤ –∫–æ–Ω—Å–æ–ª—å"""
    participants = get_confirmed_participants()
    
    if not participants:
        print("‚ùå –ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π")
        return
    
    print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π: {len(participants)}\n")
    print("-" * 80)
    
    # –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –ø–æ –∫—É—Ä—Å–∞–º
    courses = {}
    for p in participants:
        course = p[3]  # chosen_course
        if course not in courses:
            courses[course] = []
        courses[course].append(p)
    
    # –í—ã–≤–æ–¥ –ø–æ –∫—É—Ä—Å–∞–º
    for course_name, course_participants in courses.items():
        print(f"\nüìö –ö—É—Ä—Å: {course_name}")
        print(f"   –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(course_participants)}")
        print("-" * 80)
        
        for idx, (user_id, username, first_name, chosen_course, course_id, created_at) in enumerate(course_participants, 1):
            print(f"{idx}. User ID: {user_id}")
            print(f"   –ò–º—è: {first_name or '–ù–µ —É–∫–∞–∑–∞–Ω–æ'}")
            print(f"   Username: @{username if username else '–ù–µ —É–∫–∞–∑–∞–Ω'}")
            print(f"   –î–∞—Ç–∞ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏: {created_at}")
            print(f"   ID –∫—É—Ä—Å–∞: {course_id}")
            print()
    
    print("-" * 80)
    print(f"\nüìä –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   –í—Å–µ–≥–æ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω—ã—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤: {len(participants)}")
    for course_name, course_participants in courses.items():
        print(f"   {course_name}: {len(course_participants)} —á–µ–ª.")

def get_user_ids_for_messaging():
    """–ü–æ–ª—É—á–∏—Ç—å —Ç–æ–ª—å–∫–æ user_id –¥–ª—è –±—É–¥—É—â–µ–π —Ä–∞—Å—Å—ã–ª–∫–∏"""
    participants = get_confirmed_participants()
    user_ids = [p[0] for p in participants]
    
    print(f"\nüí¨ User IDs –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π:")
    print(f"–í—Å–µ–≥–æ: {len(user_ids)} —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤")
    print(f"IDs: {user_ids}")
    
    return user_ids

if __name__ == "__main__":
    print("üîç –ü–æ–∏—Å–∫ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π...\n")
    
    try:
        # –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
        display_participants()
        
        # –ü–æ–∫–∞–∑–∞—Ç—å —Å–ø–∏—Å–æ–∫ ID –¥–ª—è —Ä–∞—Å—Å—ã–ª–∫–∏
        user_ids = get_user_ids_for_messaging()
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö: {e}")