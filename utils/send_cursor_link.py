"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —É—Ä–æ–∫ –ø–æ Cursor –≤—Å–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
"""

import logging
import asyncio
from telegram import Bot
from db import free_lessons as db_free_lessons

logger = logging.getLogger(__name__)

async def send_cursor_lesson_link(bot: Bot):
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —É—Ä–æ–∫ –ø–æ Cursor –≤—Å–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º.
    –í—ã–∑—ã–≤–∞–µ—Ç—Å—è –ø—Ä–∏ –¥–µ–ø–ª–æ–µ –±–æ—Ç–∞.
    """
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–∫ –ø–æ Cursor
    registrations = db_free_lessons.get_registrations_by_type('cursor_lesson')
    
    if not registrations:
        logger.info("No users registered for Cursor lesson")
        return
    
    message_text = """üîî –í–∞–∂–Ω–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ!

üìÖ –í–ê–ô–ë–ö–û–î–ò–ù–ì –° CURSOR
‚è∞ 20 –∞–≤–≥—É—Å—Ç–∞ –≤ 21:00 –ø–æ –ú–°–ö

–û–±–Ω–æ–≤–ª–µ–Ω–∞ —Å—Å—ã–ª–∫–∞ –Ω–∞ —É—Ä–æ–∫:
üëâ https://meet.google.com/cna-qrtp-wna

–°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –Ω–æ–≤—É—é —Å—Å—ã–ª–∫—É –∏ –¥–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ —É—Ä–æ–∫–µ! üöÄ"""
    
    success_count = 0
    error_count = 0
    
    for registration in registrations:
        user_id = registration['user_id']
        try:
            await bot.send_message(
                chat_id=user_id,
                text=message_text
            )
            logger.info(f"Sent cursor lesson link to user {user_id}")
            success_count += 1
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏ —á—Ç–æ–±—ã –Ω–µ —Å–ø–∞–º–∏—Ç—å
            await asyncio.sleep(0.1)
        except Exception as e:
            logger.error(f"Failed to send to user {user_id}: {e}")
            error_count += 1
    
    logger.info(f"Cursor lesson link sent. Success: {success_count}, Errors: {error_count}")