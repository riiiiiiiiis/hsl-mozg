#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å—Å—ã–ª–∫–∏ –Ω–∞ —É—Ä–æ–∫ –ø–æ Cursor –≤—Å–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º
"""

import asyncio
import logging
import os
from telegram import Bot
from db import free_lessons as db_free_lessons
import config

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

async def send_lesson_links():
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —Å—Å—ã–ª–∫—É –Ω–∞ —É—Ä–æ–∫ –≤—Å–µ–º –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–º –Ω–∞ cursor_lesson"""
    
    bot = Bot(token=config.BOT_TOKEN)
    
    # –ü–æ–ª—É—á–∞–µ–º –≤—Å–µ—Ö –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –Ω–∞ —É—Ä–æ–∫ –ø–æ Cursor
    registrations = db_free_lessons.get_registrations_by_type('cursor_lesson')
    
    if not registrations:
        logger.info("–ù–µ—Ç –∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –Ω–∞ —É—Ä–æ–∫ –ø–æ Cursor")
        return
    
    message_text = """üîî –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –±–µ—Å–ø–ª–∞—Ç–Ω–æ–º —É—Ä–æ–∫–µ!

üìÖ –í–ê–ô–ë–ö–û–î–ò–ù–ì –° CURSOR
‚è∞ 20 –∞–≤–≥—É—Å—Ç–∞ –≤ 21:00 –ø–æ –ú–°–ö

–°–æ–∑–¥–∞–¥–∏–º —Ç–µ–ª–µ–≥—Ä–∞–º –±–æ—Ç–∞ —Å –ø–æ–º–æ—â—å—é –ø—Ä–æ–º—Ç–∏–Ω–≥–∞ –≤ Cursor!

üëâ –°—Å—ã–ª–∫–∞ –Ω–∞ —É—Ä–æ–∫: https://meet.google.com/cna-qrtp-wna

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ —É—Ä–æ–∫–µ! üöÄ"""
    
    success_count = 0
    error_count = 0
    
    for registration in registrations:
        user_id = registration['user_id']
        try:
            await bot.send_message(
                chat_id=user_id,
                text=message_text
            )
            logger.info(f"–û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}")
            success_count += 1
            # –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É –æ—Ç–ø—Ä–∞–≤–∫–∞–º–∏
            await asyncio.sleep(0.1)
        except Exception as e:
            logger.error(f"–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
            error_count += 1
    
    logger.info(f"–û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞. –£—Å–ø–µ—à–Ω–æ: {success_count}, –û—à–∏–±–æ–∫: {error_count}")
    print(f"\n‚úÖ –û—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ {success_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")
    if error_count > 0:
        print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å {error_count} –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º")

if __name__ == "__main__":
    asyncio.run(send_lesson_links())