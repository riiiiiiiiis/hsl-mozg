#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π.
–í–ê–ñ–ù–û: –°–µ–π—á–∞—Å –æ—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞! –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ —Å—Ç—Ä–æ–∫–∏ —Å bot.send_message –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏.
"""

import asyncio
import sqlite3
from datetime import datetime
from telegram import Bot
from telegram.constants import ParseMode
import config

def get_db_connection():
    """–°–æ–∑–¥–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö"""
    return sqlite3.connect(config.DB_NAME)

def get_confirmed_participants():
    """–ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π (confirmed = 2)"""
    conn = get_db_connection()
    cursor = conn.cursor()
    
    cursor.execute("""
        SELECT user_id, username, first_name, chosen_course, course_id, created_at
        FROM bookings
        WHERE confirmed = 2
        ORDER BY created_at DESC
    """)
    
    participants = cursor.fetchall()
    conn.close()
    
    return participants

async def send_message_to_participants(message_text):
    """–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤—Å–µ–º —É—á–∞—Å—Ç–Ω–∏–∫–∞–º —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π"""
    bot = Bot(token=config.BOT_TOKEN)
    participants = get_confirmed_participants()
    
    if not participants:
        print("‚ùå –ù–µ—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ —Å –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–Ω–æ–π –æ–ø–ª–∞—Ç–æ–π")
        return
    
    print(f"üì® –ù–∞—á–∏–Ω–∞—é —Ä–∞—Å—Å—ã–ª–∫—É {len(participants)} —É—á–∞—Å—Ç–Ω–∏–∫–∞–º...\n")
    
    success_count = 0
    error_count = 0
    
    for user_id, username, first_name, chosen_course, course_id, created_at in participants:
        try:
            # –ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ
            personalized_message = message_text.replace("{first_name}", first_name or "–£—á–∞—Å—Ç–Ω–∏–∫")
            personalized_message = personalized_message.replace("{course_name}", chosen_course)
            
            print(f"üì§ –û—Ç–ø—Ä–∞–≤–ª—è—é —Å–æ–æ–±—â–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id} (@{username or '–±–µ–∑ username'})...")
            
            # –í–ê–ñ–ù–û: –≠—Ç–∞ —Å—Ç—Ä–æ–∫–∞ –∑–∞–∫–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞–Ω–∞ –¥–ª—è –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏!
            # –†–∞—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π—Ç–µ –¥–ª—è —Ä–µ–∞–ª—å–Ω–æ–π –æ—Ç–ø—Ä–∞–≤–∫–∏:
            # await bot.send_message(
            #     chat_id=user_id,
            #     text=personalized_message,
            #     parse_mode=ParseMode.MARKDOWN_V2
            # )
            
            # –°–µ–π—á–∞—Å –ø—Ä–æ—Å—Ç–æ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º, —á—Ç–æ –±—ã –æ—Ç–ø—Ä–∞–≤–∏–ª–∏:
            print(f"‚úÖ –°–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è {first_name or '–£—á–∞—Å—Ç–Ω–∏–∫'} (@{username or '–±–µ–∑ username'}):")
            print(f"   –ö—É—Ä—Å: {chosen_course}")
            print(f"   –¢–µ–∫—Å—Ç: {personalized_message[:100]}...")
            print()
            
            success_count += 1
            
            # –ó–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏ (—á—Ç–æ–±—ã –Ω–µ –ø—Ä–µ–≤—ã—Å–∏—Ç—å –ª–∏–º–∏—Ç—ã Telegram)
            await asyncio.sleep(0.5)
            
        except Exception as e:
            error_count += 1
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {user_id}: {e}")
    
    print(f"\nüìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã —Ä–∞—Å—Å—ã–ª–∫–∏:")
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {success_count}")
    print(f"‚ùå –û—à–∏–±–∫–∏: {error_count}")
    print(f"üì® –í—Å–µ–≥–æ: {len(participants)}")

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    # –ü—Ä–∏–º–µ—Ä —Å–æ–æ–±—â–µ–Ω–∏—è —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é –ø–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∞—Ü–∏–∏
    message_template = """
–ü—Ä–∏–≤–µ—Ç, {first_name}! üëã

–ù–∞–ø–æ–º–∏–Ω–∞–µ–º, —á—Ç–æ –≤–∞—à–µ —É—á–∞—Å—Ç–∏–µ –≤ –∫—É—Ä—Å–µ "{course_name}" –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ! 

üóì –ù–µ –∑–∞–±—É–¥—å—Ç–µ –æ—Ç–º–µ—Ç–∏—Ç—å –¥–∞—Ç—É –Ω–∞—á–∞–ª–∞ –∫—É—Ä—Å–∞ –≤ –∫–∞–ª–µ–Ω–¥–∞—Ä–µ.
üìö –ü–æ–¥–≥–æ—Ç–æ–≤—å—Ç–µ –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ–µ –¥–ª—è —É—Å–ø–µ—à–Ω–æ–≥–æ –æ–±—É—á–µ–Ω–∏—è.

–ï—Å–ª–∏ —É –≤–∞—Å –µ—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∂–∏—Ç–µ—Å—å —Å –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–æ–º: {admin_contact}

–î–æ –≤—Å—Ç—Ä–µ—á–∏ –Ω–∞ –∫—É—Ä—Å–µ! üöÄ
    """.strip()
    
    # –ü–æ–¥—Å—Ç–∞–≤–ª—è–µ–º –∫–æ–Ω—Ç–∞–∫—Ç –∞–¥–º–∏–Ω–∞
    message_template = message_template.replace("{admin_contact}", config.ADMIN_CONTACT)
    
    print("=" * 80)
    print("ü§ñ –†–ï–ñ–ò–ú –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø - –°–û–û–ë–©–ï–ù–ò–Ø –ù–ï –û–¢–ü–†–ê–í–õ–Ø–Æ–¢–°–Ø!")
    print("=" * 80)
    print("\nüìù –®–∞–±–ª–æ–Ω —Å–æ–æ–±—â–µ–Ω–∏—è:")
    print(message_template)
    print("\n" + "=" * 80 + "\n")
    
    # –ó–∞–ø—É—Å–∫ —Ä–∞—Å—Å—ã–ª–∫–∏
    await send_message_to_participants(message_template)

if __name__ == "__main__":
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ —Ä–∞—Å—Å—ã–ª–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π...\n")
    
    try:
        asyncio.run(main())
    except KeyboardInterrupt:
        print("\n‚èπ –†–∞—Å—Å—ã–ª–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")